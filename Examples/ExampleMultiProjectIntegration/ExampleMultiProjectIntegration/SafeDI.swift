// This file was generated by the SafeDIGenerateDependencyTree build tool plugin.
// Any modifications made to this file will be overwritten on subsequent builds.
// Please refrain from editing this file directly.

#if canImport(Combine)
import Combine
#endif
#if canImport(Foundation)
import Foundation
#endif
#if canImport(SafeDI)
import SafeDI
#endif
#if canImport(Subproject)
import Subproject
#endif
#if canImport(SwiftUI)
import SwiftUI
#endif

extension NotesApp {
    public init() {
        let stringStorage: StringStorage = UserDefaults.instantiate()
        let userService: any UserService = DefaultUserService(stringStorage: stringStorage)
        @MainActor func __safeDI_nameEntryViewBuilder() -> NameEntryView {
            NameEntryView(userService: userService)
        }
        let nameEntryViewBuilder = Instantiator<NameEntryView>(__safeDI_nameEntryViewBuilder)
        @MainActor func __safeDI_noteViewBuilder(userName: String) -> NoteView {
            NoteView(userName: userName, userService: userService, stringStorage: stringStorage)
        }
        let noteViewBuilder = Instantiator<NoteView> {
            __safeDI_noteViewBuilder(userName: $0)
        }
        self.init(userService: userService, stringStorage: stringStorage, nameEntryViewBuilder: nameEntryViewBuilder, noteViewBuilder: noteViewBuilder)
    }
}